stages:
  - build
  - docker build
  - deploy staging
  
# This common job template is used by each job working with docker registry
.docker_job: &docker_job
  before_script:
    - uname -a
    - whoami
    - docker info
    # This user is gitlab internal user each pipeline generates temporary token
    # which allows gitlab-ci-token user to pull push to registry
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  tags:
    - dockerbuild



build:
  stage: build
  image: docker-registry.techtribe.nl/starter-kits/docker/node-yarn
  tags:
    - alpine
  script:
    - yarn
  cache:
    paths:
      - node_modules
      - .yarn
  artifacts:
    when: on_success
    expire_in: 24 hrs
    paths:
      - node_modules
      - client/


docker:build:
  image: docker:latest
  stage: docker build
  when: on_success
  tags:
    - dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
  dependencies:
    - build


deploy:dev:
  image: docker-registry.techtribe.nl/starter-kits/docker/ansible:latest
  tags:
    - alpine
  stage: deploy staging
  only:
    - development@gitlab.techtribe.nl/essent
  environment:
    name: zo-opgelost.the-tribes.nl - development branch
    url: https://zo-opgelost.the-tribes.nl
  when: on_success
  script:
    - '>  inventory'
    - 'echo "$SSH_PRIVATE_KEY">key'
    - chmod 400 key
    - cat key
    - 'echo "[staging]" >> inventory'
    - 'echo "zubat.techtribe.nl ansible_ssh_private_key_file=key" >> inventory'
    - cat inventory
    - cat key
    - cat inventory
    - cat ansible.cfg
    - export
    - ansible-playbook -i inventory
            -e CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE
            -e CI_BUILD_USER=gitlab-ci-token
            -e CI_BUILD_TOKEN=$CI_BUILD_TOKEN
            deploy.yml
  dependencies:
    - docker:build

